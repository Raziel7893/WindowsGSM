<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenGSQ</name>
    </assembly>
    <members>
        <member name="T:OpenGSQ.BinaryReaderExtensions">
            <summary>
            Provides extension methods for the BinaryReader class.
            </summary>
        </member>
        <member name="M:OpenGSQ.BinaryReaderExtensions.RemainingBytes(System.IO.BinaryReader)">
            <summary>
            Calculates the number of bytes remaining in the BinaryReader's BaseStream.
            </summary>
            <param name="br">The BinaryReader instance.</param>
            <returns>The number of bytes remaining to be read from the BinaryReader's BaseStream.</returns>
        </member>
        <member name="M:OpenGSQ.BinaryReaderExtensions.IsEnd(System.IO.BinaryReader)">
            <summary>
            Determines whether the end of the stream has been reached.
            </summary>
            <param name="br">The BinaryReader instance on which the extension method is called.</param>
            <returns>true if the end of the stream is reached; otherwise, false.</returns>
        </member>
        <member name="M:OpenGSQ.BinaryReaderExtensions.ReadStringEx(System.IO.BinaryReader,System.Byte[])">
            <summary>
            Reads a string from the current stream until charByte.
            </summary>
            <param name="br"></param>
            <param name="charBytes"></param>
            <returns>The string being read.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:OpenGSQ.BinaryReaderExtensions.ReadStringEx(System.IO.BinaryReader,System.Byte)">
            <summary>
            Reads a string from the current stream until charByte.
            </summary>
            <param name="br"></param>
            <param name="charByte"></param>
            <returns>The string being read.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:OpenGSQ.BinaryReaderExtensions.TryReadStringEx(System.IO.BinaryReader,System.String@,System.Byte[])">
            <summary>
            Reads a string from the current stream until charByte. Return true if is not null and empty.
            </summary>
            <param name="br"></param>
            <param name="outString"></param>
            <param name="charBytes"></param>
            <returns></returns>
        </member>
        <member name="M:OpenGSQ.BinaryReaderExtensions.TryReadStringEx(System.IO.BinaryReader,System.String@,System.Byte)">
            <summary>
            Reads a string from the current stream until charByte. Return true if is not null and empty.
            </summary>
            <param name="br"></param>
            <param name="outString"></param>
            <param name="charByte"></param>
            <returns></returns>
        </member>
        <member name="M:OpenGSQ.BinaryReaderExtensions.ReadPascalString(System.IO.BinaryReader)">
            <summary>
            Reads a Pascal string from a binary stream.
            </summary>
            <param name="br">The binary reader to read the string from.</param>
            <returns>A string read from the binary stream.</returns>
        </member>
        <member name="T:OpenGSQ.Exceptions.AuthenticationException">
            <summary>
            Represents errors that occur during application execution.
            </summary>
        </member>
        <member name="M:OpenGSQ.Exceptions.AuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGSQ.Exceptions.AuthenticationException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:OpenGSQ.Exceptions.InvalidPacketException">
            <summary>
            Represents errors that occur during application execution when a packet is invalid.
            </summary>
        </member>
        <member name="M:OpenGSQ.Exceptions.InvalidPacketException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGSQ.Exceptions.InvalidPacketException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenGSQ.Exceptions.InvalidPacketException.ThrowIfNotEqual``1(``0,``0)">
            <summary>
            Checks if the received value is equal to the expected value.
            </summary>
            <typeparam name="T">The type of the values to compare.</typeparam>
            <param name="received">The received value.</param>
            <param name="expected">The expected value.</param>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">
            Thrown when the received value does not match the expected value.
            </exception>
        </member>
        <member name="T:OpenGSQ.Exceptions.ServerNotFoundException">
            <summary>
            Represents errors that occur during application execution when a server is not found.
            </summary>
        </member>
        <member name="M:OpenGSQ.Exceptions.ServerNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGSQ.Exceptions.ServerNotFoundException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:OpenGSQ.Exceptions.TimeoutException">
            <summary>
            Represents errors that occur during application execution related to timeouts.
            </summary>
        </member>
        <member name="M:OpenGSQ.Exceptions.TimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGSQ.Exceptions.TimeoutException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:OpenGSQ.ProtocolBase">
            <summary>
            Abstract base class for protocols.
            </summary>
        </member>
        <member name="P:OpenGSQ.ProtocolBase.FullName">
            <summary>
            Gets the full name of the protocol.
            </summary>
        </member>
        <member name="P:OpenGSQ.ProtocolBase.Host">
            <summary>
            Gets the host to connect to.
            </summary>
        </member>
        <member name="P:OpenGSQ.ProtocolBase.Port">
            <summary>
            Gets the port to connect to.
            </summary>
        </member>
        <member name="P:OpenGSQ.ProtocolBase.Timeout">
            <summary>
            The timeout for the connection in seconds.
            </summary>
        </member>
        <member name="M:OpenGSQ.ProtocolBase.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ProtocolBase class.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <param name="timeout">The connection timeout in milliseconds. Default is 5 seconds.</param>
        </member>
        <member name="M:OpenGSQ.ProtocolBase.GetIPAddress">
            <summary>
            Retrieves the IP address of the host.
            </summary>
            <returns>
            A task that represents the asynchronous operation. The task result contains the IP address of the host.
            </returns>
        </member>
        <member name="T:OpenGSQ.Protocols.ASE">
            <summary>
            All-Seeing Eye Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.ASE.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.ASE.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGSQ.Protocols.ASE"/> class.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <param name="timeout">The timeout for the connection.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.ASE.GetStatus">
            <summary>
            Asynchronously gets the status of the server.
            </summary>
            <returns>
            A task that represents the asynchronous operation. The task result contains a Status object with the status information.
            </returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">
            Thrown when the received packet header does not match the expected header.
            </exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Battlefield">
            <summary>
            Battlefield Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Battlefield.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.Battlefield.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGSQ.Protocols.Battlefield"/> class.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <param name="timeout">The timeout for the connection.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Battlefield.GetInfo">
            <summary>
            Retrieves the information about the game.
            </summary>
            <returns>
            A task that represents the asynchronous operation. The task result contains the information about the game.
            </returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Battlefield.GetVersion">
            <summary>
            Retrieves the version information of the game mod.
            </summary>
            <returns>
            A task that represents the asynchronous operation. The task result contains the version information of the game mod.
            </returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Battlefield.GetPlayers">
            <summary>
            Gets the players on the server.
            </summary>
            <returns>A list of dictionaries containing player information.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Doom3">
            <summary>
            Doom3 Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Doom3.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.Doom3.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Doom3 class.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <param name="timeout">The connection timeout in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Doom3.GetStatus(System.Boolean)">
            <summary>
            Asynchronously retrieves the status of the game server.
            </summary>
            <param name="stripColor">A boolean indicating whether to strip color codes from the player names.</param>
            <returns>A Status object containing the server information and player list.</returns>
            <remarks>
            This function sends a request to the game server and processes the response to extract server information and player details. If the 'stripColor' parameter is set to True, color codes in player names are removed. The function returns a Status object which includes a dictionary of server information and a list of players.
            </remarks>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected header.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Doom3.StripColors(System.String)">
            <summary>
            Strips color codes from the input text.
            </summary>
            <param name="text">The text to strip color codes from.</param>
            <returns>The text with color codes removed.</returns>
        </member>
        <member name="T:OpenGSQ.Protocols.EOS">
            <summary>
            Epic Online Services (EOS) Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.EOS.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.EOS.#ctor(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the EOS class.
            </summary>
            <param name="host">The host name of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="deploymentId">The deployment ID for the application.</param>
            <param name="accessToken">The access token for the application.</param>
            <param name="timeout">The timeout value for the connection, in milliseconds. Default is 5000.</param>
            <exception cref="T:System.ArgumentException">Thrown when either deploymentId or accessToken is null.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.EOS.GetAccessTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Asynchronously gets an access token.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the access token.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.EOS.GetExternalAuthTokenAsync(System.String,System.String,System.String)">
            <summary>
            Asynchronously retrieves an external authentication token.
            </summary>
            <param name="clientId">The client ID.</param>
            <param name="clientSecret">The client secret.</param>
            <param name="externalAuthType">The type of external authentication.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the access token.</returns>
            <exception cref="T:System.ArgumentException">Thrown when either clientId or clientSecret is null.</exception>
            <exception cref="T:System.NotImplementedException">Thrown when the provided externalAuthType hasn't been implemented yet.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.EOS.GetMatchmakingAsync(System.String,System.String)">
            <summary>
            Asynchronously retrieves matchmaking data without any filter parameters.
            </summary>
            <param name="deploymentId">The deployment ID.</param>
            <param name="accessToken">The access token.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the matchmaking data.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.EOS.GetMatchmakingAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Asynchronously retrieves matchmaking data.
            </summary>
            <param name="deploymentId">The deployment ID.</param>
            <param name="accessToken">The access token.</param>
            <param name="filter">The filter parameters for the matchmaking request.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the matchmaking data.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.EOS.GetInfo">
            <summary>
            Retrieves the information about the game server.
            </summary>
            <returns>
            A task that represents the asynchronous operation. The task result contains a dictionary of the server information.
            </returns>
            <exception cref="T:OpenGSQ.Exceptions.ServerNotFoundException">Thrown when the server is not found.</exception>
            <exception cref="T:OpenGSQ.Exceptions.AuthenticationException">Thrown when there is a failure in getting the access token.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.FiveM">
            <summary>
            FiveM Protocol (https://docs.fivem.net/docs/server-manual/proxy-setup/)
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.FiveM.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.FiveM.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the FiveM class.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <param name="timeout">The connection timeout in milliseconds. Default is 5 seconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.FiveM.GetInfo">
            <summary>
            Asynchronously gets information about the server.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the server information.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.FiveM.GetPlayers">
            <summary>
            Asynchronously gets the list of players from the server.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the list of players.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.FiveM.GetDynamic">
            <summary>
            Asynchronously gets dynamic information from the server.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the dynamic information.</returns>
        </member>
        <member name="T:OpenGSQ.Protocols.GameSpy1">
            <summary>
            Gamespy Query Protocol version 1
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.GameSpy1.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy1.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the GameSpy1 class.
            </summary>
            <param name="host">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy1.GetBasic">
            <summary>
            Gets basic server information, mainly for recognition.
            </summary>
            <returns>A dictionary containing the basic server information.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy1.GetInfo(System.Boolean)">
            <summary>
            Gets information about the current game running on the server.
            </summary>
            <param name="XServerQuery">A boolean indicating whether to use XServerQuery.</param>
            <returns>A dictionary containing the game information.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy1.GetRules(System.Boolean)">
            <summary>
            Gets the settings for the current game, returns sets of rules depends on the running game type.
            </summary>
            <param name="XServerQuery">A boolean indicating whether to use XServerQuery.</param>
            <returns>A dictionary containing the game rules.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy1.GetPlayers(System.Boolean)">
            <summary>
            Returns information about each player on the server.
            </summary>
            <param name="XServerQuery">A boolean indicating whether to use XServerQuery.</param>
            <returns>A list of dictionaries containing the player information.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy1.GetStatus(System.Boolean)">
            <summary>
            Gets the status of the server. If the server uses XServerQuery, it sends the new information, otherwise it gives back the old information.
            </summary>
            <param name="XServerQuery">A boolean indicating whether to use XServerQuery.</param>
            <returns>A Status object containing the server information, players, and teams.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy1.GetTeams">
            <summary>
            Returns information about each team on the server.
            </summary>
            <returns>A list of dictionaries containing the team information.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy1.GetEcho(System.String)">
            <summary>
            Sends an echo command to the server. The server will return the argument.
            </summary>
            <param name="text">The text to send with the echo command.</param>
            <returns>A dictionary containing the server's response.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.GameSpy2">
            <summary>
            Gamespy Query Protocol version 2
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.GameSpy2.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy2.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the GameSpy2 class.
            </summary>
            <param name="host">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy2.GetStatus(OpenGSQ.Protocols.GameSpy2.RequestHeader)">
            <summary>
            Retrieves information about the server including Info, Players, and Teams.
            </summary>
            <param name="requestHeader">The type of information to request.</param>
            <returns>A Status object containing the requested information.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.GameSpy2.RequestHeader">
            <summary>
            Represents the types of requests that can be sent.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.GameSpy2.RequestHeader.Info">
            <summary>
            A request for information.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.GameSpy2.RequestHeader.Players">
            <summary>
            A request for player data.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.GameSpy2.RequestHeader.Teams">
            <summary>
            A request for team data.
            </summary>
        </member>
        <member name="T:OpenGSQ.Protocols.GameSpy3">
            <summary>
            Gamespy Query Protocol version 3
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.GameSpy3.FullName">
            <inheritdoc/>
        </member>
        <member name="F:OpenGSQ.Protocols.GameSpy3.ChallengeRequired">
            <summary>
            A boolean indicating whether to use the challenge method.
            </summary>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy3.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the GameSpy3 class.
            </summary>
            <param name="host">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy3.GetStatus">
            <summary>
            Retrieves information about the server including Info, Players, and Teams.
            </summary>
            <returns>A Status object containing the server information, players, and teams.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected header.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy3.TrimPayload(System.Byte[])">
            <summary>
            Remove the last trash string on the payload
            </summary>
            <param name="payload"></param>
            <returns></returns>
        </member>
        <member name="T:OpenGSQ.Protocols.GameSpy4">
            <summary>
            Gamespy Query Protocol version 4
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.GameSpy4.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.GameSpy4.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the GameSpy4 class.
            </summary>
            <param name="host">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="T:OpenGSQ.Protocols.KillingFloor">
            <summary>
            Killing Floor Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.KillingFloor.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.KillingFloor.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the KillingFloor class.
            </summary>
        </member>
        <member name="M:OpenGSQ.Protocols.KillingFloor.GetDetails(System.Boolean)">
            <summary>
            Gets the details of the server.
            </summary>
            <param name="stripColor">A boolean value indicating whether to strip color codes from the server name. Default is true.</param>
            <returns>The details of the server.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected value.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Minecraft">
            <summary>
            Minecraft Protocol (https://wiki.vg/Server_List_Ping)
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Minecraft.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.Minecraft.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Minecraft class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="timeout">The timeout. Default is 5000.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Minecraft.GetStatus(System.Int32)">
            <summary>
            Gets the server status asynchronously.
            </summary>
            <param name="version">The protocol version. Default is 47.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the server status.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Minecraft.GetStatusPre17">
            <summary>
            Gets the server status for servers using a version older than Minecraft 1.7.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the server status.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected header.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Minecraft.StripColors(System.String)">
            <summary>
            Strips color codes from the input text.
            </summary>
            <param name="text">The text to strip color codes from.</param>
            <returns>The text with color codes stripped.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.Minecraft.PackVarint(System.Int32)">
            <summary>
            Packs an integer into a Varint.
            </summary>
            <param name="val">The integer to pack.</param>
            <returns>The packed Varint as a byte array.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.Minecraft.UnpackVarint(System.IO.BinaryReader)">
            <summary>
            Unpacks a Varint into an integer.
            </summary>
            <param name="br">The BinaryReader to read the Varint from.</param>
            <returns>The unpacked integer.</returns>
        </member>
        <member name="T:OpenGSQ.Protocols.Quake1">
            <summary>
            Quake1 Query Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Quake1.FullName">
            <inheritdoc/>
        </member>
        <member name="F:OpenGSQ.Protocols.Quake1.Delimiter1">
            <summary>
            The ASCII value of the backslash character used as a delimiter.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.Quake1.Delimiter2">
            <summary>
            The ASCII value of the newline character used as a delimiter.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.Quake1.RequestHeader">
            <summary>
            The header of the request.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.Quake1.ResponseHeader">
            <summary>
            The header of the response.
            </summary>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake1.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Quake1 class.
            </summary>
            <param name="host">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake1.GetStatus">
            <summary>
            Gets the status of the server including information and players.
            </summary>
            <returns>A Status object containing the server information and players.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected header.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake1.GetResponseBinaryReader">
            <summary>
            Gets a BinaryReader for the response data.
            </summary>
            <returns>A BinaryReader for the response data.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected header.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake1.ParseInfo(System.IO.BinaryReader)">
            <summary>
            Parses the server information from the BinaryReader.
            </summary>
            <param name="br">The BinaryReader containing the server information.</param>
            <returns>A dictionary containing the server information.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake1.ParsePlayers(System.IO.BinaryReader)">
            <summary>
            Parses the player information from the BinaryReader.
            </summary>
            <param name="br">The BinaryReader containing the player information.</param>
            <returns>A list of Player objects.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake1.GetPlayerMatchCollections(System.IO.BinaryReader)">
            <summary>
            Gets a list of MatchCollection objects for each player.
            </summary>
            <param name="br">The BinaryReader containing the player information.</param>
            <returns>A list of MatchCollection objects for each player.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake1.ConnectAndSend(System.String)">
            <summary>
            Connects to the server and sends a request.
            </summary>
            <param name="request">The request to send.</param>
            <returns>The response data received from the server.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Quake2">
            <summary>
            Quake2 Query Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Quake2.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake2.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Quake2 class.
            </summary>
            <param name="host">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake2.GetStatus">
            <summary>
            Gets the status of the server including information and players.
            </summary>
            <returns>A Status object containing the server information and players.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected header.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake2.ParsePlayers(System.IO.BinaryReader)">
            <summary>
            Parses the player information from the BinaryReader.
            </summary>
            <param name="br">The BinaryReader containing the player information.</param>
            <returns>A list of Player objects.</returns>
        </member>
        <member name="T:OpenGSQ.Protocols.Quake3">
            <summary>
            Quake3 Query Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Quake3.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake3.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Quake3 class.
            </summary>
            <param name="host">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake3.GetInfo(System.Boolean)">
            <summary>
            Gets the server information. If stripColor is true, color codes are removed from the server name.
            </summary>
            <param name="stripColor">A boolean indicating whether to remove color codes from the server name.</param>
            <returns>A dictionary containing the server information.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected header.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake3.GetStatus(System.Boolean)">
            <summary>
            Gets the status of the server including information and players. If stripColor is true, color codes are removed from the server name and player names.
            </summary>
            <param name="stripColor">A boolean indicating whether to remove color codes from the server name and player names.</param>
            <returns>A Status object containing the server information and players.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected header.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Quake3.StripColor(System.String)">
            <summary>
            Removes color codes from a string.
            </summary>
            <param name="text">The text to remove color codes from.</param>
            <returns>The text with color codes removed.</returns>
        </member>
        <member name="T:OpenGSQ.Protocols.RakNet">
            <summary>
            RakNet Protocol (https://wiki.vg/Raknet_Protocol)
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.RakNet.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.RakNet.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the RakNet class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="timeout">The timeout. Default is 5000.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.RakNet.GetStatus">
            <summary>
            Gets the server status asynchronously.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the server status.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Samp">
            <summary>
            San Andreas Multiplayer Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Samp.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.Samp.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Samp class.
            </summary>
            <param name="host">The host address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Samp.GetStatus">
            <summary>
            Asynchronously gets the status of the server.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains a StatusResponse object with the server status.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Samp.GetPlayers">
            <summary>
            Asynchronously gets the list of players from the server.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains a list of Player objects.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Samp.GetRules">
            <summary>
            Asynchronously gets the rules.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains a dictionary of rules.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Satisfactory">
            <summary>
            Satisfactory Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Satisfactory.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.Satisfactory.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Satisfactory class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port. Default is 15777.</param>
            <param name="timeout">The timeout. Default is 5000.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Satisfactory.GetStatus">
            <summary>
            Gets the status asynchronously.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the StatusResponse.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Scum">
            <summary>
            Scum Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Scum.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.Scum.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Scum class.
            </summary>
            <param name="host">The host of the server.</param>
            <param name="port">The port of the server.</param>
            <param name="timeout">The timeout for server requests.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Scum.GetStatus(System.Collections.Generic.List{OpenGSQ.Responses.Scum.Status})">
            <summary>
            Gets the status of the server.
            </summary>
            <param name="masterServers">The list of master servers to query.</param>
            <returns>The status of the server.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
            <exception cref="T:OpenGSQ.Exceptions.ServerNotFoundException">Thrown when the server is not found in the list of master servers.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Scum.QueryMasterServers">
            <summary>
            Queries the master servers for a list of servers.
            </summary>
            <returns>A list of servers from the master servers.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
            <exception cref="T:System.Exception">Thrown when failed to connect to any of the master servers.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Source">
            <summary>
            Source Engine Query Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Source.FullName">
            <inheritdoc/>
        </member>
        <member name="F:OpenGSQ.Protocols.Source.A2S_INFO">
            <summary>
            The byte array representing the A2S_INFO request.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.Source.A2S_PLAYER">
            <summary>
            The byte array representing the A2S_PLAYER request.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.Source.A2S_RULES">
            <summary>
            The byte array representing the A2S_RULES request.
            </summary>
        </member>
        <member name="M:OpenGSQ.Protocols.Source.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Source class.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to. Default is 27015.</param>
            <param name="timeout">The connection timeout in milliseconds. Default is 5 seconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Source.GetInfo">
            <summary>
            Retrieves information about the server including, but not limited to: its name, the map currently being played, and the number of players.<br />
            See: <see href="https://developer.valvesoftware.com/wiki/Server_queries#A2S_INFO">https://developer.valvesoftware.com/wiki/Server_queries#A2S_INFO</see>
            </summary>
            <returns>
            A task that represents the asynchronous operation. The task result contains the server information.
            </returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the received packet type is not S2A_INFO_SRC or S2A_INFO_DETAILED.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Source.GetPlayers">
            <summary>
            This query retrieves information about the players currently on the server.<br />
            See: <see href="https://developer.valvesoftware.com/wiki/Server_queries#A2S_PLAYER">https://developer.valvesoftware.com/wiki/Server_queries#A2S_PLAYER</see>
            </summary>
            <returns>
            A task that represents the asynchronous operation. The task result contains a list of players.
            </returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the received packet type is not S2A_PLAYER.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Source.GetRules">
            <summary>
            Returns the server rules, or configuration variables in name/value pairs.<br />
            See: <see href="https://developer.valvesoftware.com/wiki/Server_queries#A2S_RULES">https://developer.valvesoftware.com/wiki/Server_queries#A2S_RULES</see>
            </summary>
            <returns>
            A task that represents the asynchronous operation. The task result contains a dictionary of rules where the rule name is the key and the rule value is the value.
            </returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the received packet type is not S2A_RULES.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.TeamSpeak3">
            <summary>
            TeamSpeak 3 Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.TeamSpeak3.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.TeamSpeak3.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TeamSpeak3 class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="voicePort">The voice port.</param>
            <param name="timeout">The timeout. Default is 5000.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.TeamSpeak3.GetInfo">
            <summary>
            Gets the server information asynchronously.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the server information.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.TeamSpeak3.GetClients">
            <summary>
            Gets the client list asynchronously.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the client list.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.TeamSpeak3.GetChannels">
            <summary>
            Gets the channel list asynchronously.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains the channel list.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.Protocols.Unreal2">
            <summary>
            Unreal 2 Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Unreal2.FullName">
            <inheritdoc/>
        </member>
        <member name="F:OpenGSQ.Protocols.Unreal2.DETAILS">
            <summary>
            Represents the byte value for details.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.Unreal2.RULES">
            <summary>
            Represents the byte value for rules.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.Unreal2.PLAYERS">
            <summary>
            Represents the byte value for players.
            </summary>
        </member>
        <member name="M:OpenGSQ.Protocols.Unreal2.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Unreal2 class.
            </summary>
        </member>
        <member name="M:OpenGSQ.Protocols.Unreal2.GetDetails(System.Boolean)">
            <summary>
            Asynchronously retrieves the details of the server.
            </summary>
            <param name="stripColor">A boolean value indicating whether to strip color codes from the server name. Default is true.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the server status, including details such as server ID, IP, ports, server name, map name, game type, player count, max players, ping, flags, and skill level.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected DETAILS header.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Unreal2.GetRules(System.Boolean)">
            <summary>
            Gets the rules of the server.
            </summary>
            <param name="stripColor">A boolean value indicating whether to strip color codes. Default is true.</param>
            <returns>The rules of the server.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected value.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Unreal2.GetPlayers(System.Boolean)">
            <summary>
            Gets the players of the server.
            </summary>
            <param name="stripColor">A boolean value indicating whether to strip color codes. Default is true.</param>
            <returns>A list of players of the server.</returns>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the packet header does not match the expected value.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Unreal2.StripColor(System.String)">
            <summary>
            Strips color codes from the input text.
            </summary>
            <param name="text">The input text which may contain color codes.</param>
            <returns>A string with color codes stripped out.</returns>
        </member>
        <member name="M:OpenGSQ.Protocols.Unreal2.ReadUnreal2String(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads a string from a binary reader.
            </summary>
            <param name="br">The binary reader to read the string from.</param>
            <param name="stripColor">Optional parameter. If set to true, color information will be stripped from the string. Default is false.</param>
            <returns>
            The string read from the binary reader. If 'stripColor' is true, the returned string will have color information stripped.
            </returns>
        </member>
        <member name="M:OpenGSQ.Protocols.Unreal2.ReadNullString(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads a string from a binary stream, optionally stripping color information.
            </summary>
            <param name="br">The BinaryReader to read the string from.</param>
            <param name="stripColor">Optional parameter. If true, color information is stripped from the string.</param>
            <returns>The string read from the binary stream, with color information stripped if stripColor is true.</returns>
        </member>
        <member name="T:OpenGSQ.Protocols.Vcmp">
            <summary>
            Vice City Multiplayer Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.Vcmp.FullName">
            <inheritdoc/>
        </member>
        <member name="F:OpenGSQ.Protocols.Vcmp.RequestHeader">
            <summary>
            The request header to be sent to the remote host.
            </summary>
        </member>
        <member name="F:OpenGSQ.Protocols.Vcmp.ResponseHeader">
            <summary>
            The expected response header from the remote host.
            </summary>
        </member>
        <member name="M:OpenGSQ.Protocols.Vcmp.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Vcmp class.
            </summary>
            <param name="host">The host address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="timeout">The timeout for the connection in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.Protocols.Vcmp.GetStatus">
            <summary>
            Asynchronously gets the status of the server.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains a StatusResponse object with the server status.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Vcmp.GetPlayers">
            <summary>
            Asynchronously gets the list of players from the server.
            </summary>
            <returns>A task that represents the asynchronous operation. The task result contains a list of Player objects.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Vcmp.GetResponse(System.Byte)">
            <summary>
            Sends data to a remote host and receives a response.
            </summary>
            <param name="data">The data to be sent.</param>
            <returns>A byte array containing the response from the remote host.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.Protocols.Vcmp.ReadString(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads a string from a binary reader.
            </summary>
            <param name="br">The binary reader.</param>
            <param name="readOffset">The read offset. Default is 1.</param>
            <returns>The string read from the binary reader.</returns>
        </member>
        <member name="T:OpenGSQ.Protocols.WON">
            <summary>
            World Opponent Network (WON) Query Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.Protocols.WON.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.Protocols.WON.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the WON class.
            </summary>
            <param name="host">The host address of the server.</param>
            <param name="port">The port to connect to. Default is 27015.</param>
            <param name="timeout">The connection timeout in milliseconds. Default is 5 seconds.</param>
        </member>
        <member name="T:OpenGSQ.RconProtocols.SourceRcon">
            <summary>
            Source RCON Protocol
            </summary>
        </member>
        <member name="P:OpenGSQ.RconProtocols.SourceRcon.FullName">
            <inheritdoc/>
        </member>
        <member name="M:OpenGSQ.RconProtocols.SourceRcon.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Source RCON Protocol
            </summary>
            <param name="address"></param>
            <param name="port"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:OpenGSQ.RconProtocols.SourceRcon.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:OpenGSQ.RconProtocols.SourceRcon.Authenticate(System.String)">
            <summary>
            Authenticates the client with the server using the provided password.
            </summary>
            <param name="password">The password to be used for authentication.</param>
            <returns>A task that represents the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the password is null or empty.</exception>
            <exception cref="T:OpenGSQ.Exceptions.InvalidPacketException">Thrown when the received packet type is not SERVERDATA_AUTH_RESPONSE.</exception>
            <exception cref="T:OpenGSQ.Exceptions.AuthenticationException">Thrown when authentication fails.</exception>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.RconProtocols.SourceRcon.SendCommand(System.String)">
            <summary>
            Sends a command to the server and waits for the response.
            </summary>
            <param name="command">The command to be sent to the server.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the server response to the command.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.RconProtocols.SourceRcon.GetPackets(System.Byte[])">
            <summary>
            Handle Multiple-packet Responses
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:OpenGSQ.RconProtocols.SourceRcon.Packet.#ctor(System.Byte[])">
            <summary>
            Single-packet Responses
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:OpenGSQ.Responses.ASE.Player">
            <summary>
            Represents a player in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Player.Name">
            <summary>
            Gets or sets the name of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Player.Team">
            <summary>
            Gets or sets the team of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Player.Skin">
            <summary>
            Gets or sets the skin of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Player.Score">
            <summary>
            Gets or sets the score of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Player.Ping">
            <summary>
            Gets or sets the ping of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Player.Time">
            <summary>
            Gets or sets the time of the player.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.ASE.Status">
            <summary>
            Represents the status of a game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.GameName">
            <summary>
            Gets or sets the name of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.GamePort">
            <summary>
            Gets or sets the port of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.Hostname">
            <summary>
            Gets or sets the host name of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.GameType">
            <summary>
            Gets or sets the type of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.Map">
            <summary>
            Gets or sets the map of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.Version">
            <summary>
            Gets or sets the version of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.Password">
            <summary>
            Gets or sets a value indicating whether a password is required.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.NumPlayers">
            <summary>
            Gets or sets the number of players in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.MaxPlayers">
            <summary>
            Gets or sets the maximum number of players allowed in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.Rules">
            <summary>
            Gets or sets the rules of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.ASE.Status.Players">
            <summary>
            Gets or sets the players in the game.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Battlefield.Info">
            <summary>
            Represents the info of a game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Hostname">
            <summary>
            Gets or sets the hostname of the game server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.NumPlayers">
            <summary>
            Gets or sets the number of players in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.MaxPlayers">
            <summary>
            Gets or sets the maximum number of players allowed in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.GameType">
            <summary>
            Gets or sets the type of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Map">
            <summary>
            Gets or sets the current map of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.RoundsPlayed">
            <summary>
            Gets or sets the number of rounds played.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.RoundsTotal">
            <summary>
            Gets or sets the total number of rounds.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Teams">
            <summary>
            Gets or sets the list of teams.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.TargetScore">
            <summary>
            Gets or sets the target score.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Status">
            <summary>
            Gets or sets the status of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Ranked">
            <summary>
            Gets or sets a value indicating whether the game is ranked.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.PunkBuster">
            <summary>
            Gets or sets a value indicating whether PunkBuster is enabled.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Password">
            <summary>
            Gets or sets a value indicating whether a password is required.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Uptime">
            <summary>
            Gets or sets the uptime of the game server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.RoundTime">
            <summary>
            Gets or sets the round time.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Mod">
            <summary>
            Gets or sets the game mod. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.IpPort">
            <summary>
            Gets or sets the IP port of the game server. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.PunkBusterVersion">
            <summary>
            Gets or sets the version of PunkBuster. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.JoinQueue">
            <summary>
            Gets or sets a value indicating whether the join queue is enabled. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Region">
            <summary>
            Gets or sets the region of the game server. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.PingSite">
            <summary>
            Gets or sets the ping site of the game server. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.Country">
            <summary>
            Gets or sets the country of the game server. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.BlazePlayerCount">
            <summary>
            Gets or sets the number of players in the Blaze game state. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.BlazeGameState">
            <summary>
            Gets or sets the Blaze game state. This property is optional.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.Info.QuickMatch">
            <summary>
            Gets or sets a value indicating whether quick match is enabled. This property is optional.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Battlefield.VersionInfo">
            <summary>
            Represents the version of a game mod.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.VersionInfo.Mod">
            <summary>
            Gets or sets the mod of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Battlefield.VersionInfo.Version">
            <summary>
            Gets or sets the version of the mod.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Doom3.Status">
            <summary>
            Represents the status of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Doom3.Status.Info">
            <summary>
            Gets or sets the server information.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Doom3.Status.Players">
            <summary>
            Gets or sets the list of players.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.EOS.Matchmaking">
            <summary>
            Represents the response from a matchmaking request.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.EOS.Matchmaking.Sessions">
            <summary>
            Gets or sets the list of sessions returned by the matchmaking request.
            Each session is represented as a dictionary where the keys are strings and the values are JsonElements.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.EOS.Matchmaking.Count">
            <summary>
            Gets or sets the count of sessions returned by the matchmaking request.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.GameSpy1.Status">
            <summary>
            Server Status
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.GameSpy1.Status.IsXServerQuery">
            <summary>
            Indicates whether the response is XServerQuery or old response.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.GameSpy1.Status.Info">
            <summary>
            Server's Info
            <para>If <see cref="P:OpenGSQ.Responses.GameSpy1.Status.IsXServerQuery"/> is <see langword="true"/>, then it includes \info\xserverquery\rules\xserverquery, else \basic\\info\\rules\\</para>
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.GameSpy1.Status.Players">
            <summary>
            Server's Players
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.GameSpy1.Status.Teams">
            <summary>
            Server's Teams (Only when <see cref="P:OpenGSQ.Responses.GameSpy1.Status.IsXServerQuery"/> is <see langword="true"/>)
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.GameSpy2.Status">
            <summary>
            Represents the status of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.GameSpy2.Status.Info">
            <summary>
            Gets or sets the server information.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.GameSpy2.Status.Players">
            <summary>
            Gets or sets the list of players.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.GameSpy2.Status.Teams">
            <summary>
            Gets or sets the list of teams.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.KillingFloor.Status">
            <summary>
            Represents the status of a server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.KillingFloor.Status.WaveCurrent">
            <summary>
            Gets or sets the current wave number in a game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.KillingFloor.Status.WaveTotal">
            <summary>
            Gets or sets the total number of waves in a game.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Minecraft.StatusPre17">
            <summary>
            Represents the status of a game for versions prior to 1.7.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Minecraft.StatusPre17.Protocol">
            <summary>
            Gets or sets the protocol of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Minecraft.StatusPre17.Version">
            <summary>
            Gets or sets the version of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Minecraft.StatusPre17.Motd">
            <summary>
            Gets or sets the message of the day.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Minecraft.StatusPre17.NumPlayers">
            <summary>
            Gets or sets the number of players in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Minecraft.StatusPre17.MaxPlayers">
            <summary>
            Gets or sets the maximum number of players allowed in the game.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Quake1.Player">
            <summary>
            Represents a player in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Player.Id">
            <summary>
            Gets or sets the player's ID.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Player.Score">
            <summary>
            Gets or sets the player's score.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Player.Time">
            <summary>
            Gets or sets the player's time.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Player.Ping">
            <summary>
            Gets or sets the player's ping.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Player.Name">
            <summary>
            Gets or sets the player's name.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Player.Skin">
            <summary>
            Gets or sets the player's skin.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Player.Color1">
            <summary>
            Gets or sets the player's first color.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Player.Color2">
            <summary>
            Gets or sets the player's second color.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Quake1.Status">
            <summary>
            Represents the status of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Status.Info">
            <summary>
            Gets or sets the server information.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake1.Status.Players">
            <summary>
            Gets or sets the list of players.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Quake2.Player">
            <summary>
            Represents a player in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake2.Player.Frags">
            <summary>
            Gets or sets the player's frags.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake2.Player.Ping">
            <summary>
            Gets or sets the player's ping.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake2.Player.Name">
            <summary>
            Gets or sets the player's name.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake2.Player.Address">
            <summary>
            Gets or sets the player's address.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Quake2.Status">
            <summary>
            Represents the status of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake2.Status.Info">
            <summary>
            Gets or sets the server information.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Quake2.Status.Players">
            <summary>
            Gets or sets the list of players.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.RakNet.Status">
            <summary>
            Represents the status response from a Minecraft server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.Edition">
            <summary>
            Gets or sets the edition of the server (MCPE or MCEE for Education Edition).
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.MotdLine1">
            <summary>
            Gets or sets the first line of the Message of the Day (MOTD).
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.ProtocolVersion">
            <summary>
            Gets or sets the protocol version of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.VersionName">
            <summary>
            Gets or sets the version name of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.NumPlayers">
            <summary>
            Gets or sets the number of players currently on the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.MaxPlayers">
            <summary>
            Gets or sets the maximum number of players that can join the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.ServerUniqueId">
            <summary>
            Gets or sets the unique ID of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.MotdLine2">
            <summary>
            Gets or sets the second line of the Message of the Day (MOTD).
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.GameMode">
            <summary>
            Gets or sets the game mode of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.GameModeNumeric">
            <summary>
            Gets or sets the numeric representation of the game mode.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.PortIPv4">
            <summary>
            Gets or sets the IPv4 port of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.RakNet.Status.PortIPv6">
            <summary>
            Gets or sets the IPv6 port of the server.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Samp.Player">
            <summary>
            Represents the Player class.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Player.Id">
            <summary>
            Gets or sets the ID of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Player.Name">
            <summary>
            Gets or sets the name of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Player.Score">
            <summary>
            Gets or sets the score of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Player.Ping">
            <summary>
            Gets or sets the ping of the player.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Samp.Status">
            <summary>
            Represents the status response from a server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Status.Password">
            <summary>
            Gets or sets a value indicating whether a password is required to connect to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Status.NumPlayers">
            <summary>
            Gets or sets the number of players currently connected to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Status.MaxPlayers">
            <summary>
            Gets or sets the maximum number of players that can connect to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Status.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Status.GameType">
            <summary>
            Gets or sets the type of game being played on the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Samp.Status.Language">
            <summary>
            Gets or sets the language of the server.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Satisfactory.Status">
            <summary>
            Represents the status response.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Satisfactory.Status.State">
            <summary>
            Gets or sets the state.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Satisfactory.Status.Version">
            <summary>
            Gets or sets the version.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Satisfactory.Status.BeaconPort">
            <summary>
            Gets or sets the beacon port.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Scum.Status">
            <summary>
            Represents the response status of a server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Scum.Status.Ip">
            <summary>
            Gets or sets the IP address of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Scum.Status.Port">
            <summary>
            Gets or sets the port number of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Scum.Status.Name">
            <summary>
            Gets or sets the name of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Scum.Status.NumPlayers">
            <summary>
            Gets or sets the number of players currently connected to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Scum.Status.MaxPlayers">
            <summary>
            Gets or sets the maximum number of players that can connect to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Scum.Status.Time">
            <summary>
            Gets or sets the server time.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Scum.Status.Password">
            <summary>
            Gets or sets a value indicating whether a password is required to connect to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Scum.Status.Version">
            <summary>
            Gets or sets the version of the server.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.Environment">
            <summary>
            Indicates the operating system of the server
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.Environment.Linux">
            <summary>
            Linux
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.Environment.Windows">
            <summary>
            Windows
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.Environment.Mac">
            <summary>
            Mac
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.ExtraDataFlag">
            <summary>
            Extra Data Flag (EDF)
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.ExtraDataFlag.Port">
            <summary>
            Port
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.ExtraDataFlag.SteamID">
            <summary>
            SteamID
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.ExtraDataFlag.Spectator">
            <summary>
            Spectator
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.ExtraDataFlag.Keywords">
            <summary>
            Keywords
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.ExtraDataFlag.GameID">
            <summary>
            GameID
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.GoldSourceInfo">
            <summary>
            Obsolete GoldSource Response
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.GoldSourceInfo.Address">
            <summary>
            IP address and port of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.GoldSourceInfo.Mod">
            <summary>
            Indicates whether the game is a mod
            <list type="bullet">
            <item>0 for Half-Life</item>
            <item>1 for Half-Life mod</item>
            </list>
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.GoldSourceInfo.Link">
            <summary>
            URL to mod website.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.GoldSourceInfo.DownloadLink">
            <summary>
            URL to download the mod.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.GoldSourceInfo.Version">
            <summary>
            Version of mod installed on server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.GoldSourceInfo.Size">
            <summary>
            Space (in bytes) the mod takes up.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.GoldSourceInfo.Type">
            <summary>
            Indicates the type of mod:
            <list type="bullet">
            <item>0 for single and multiplayer mod</item>
            <item>1 for multiplayer only mod</item>
            </list>
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.GoldSourceInfo.DLL">
            <summary>
            Indicates whether mod uses its own DLL:
            <list type="bullet">
            <item>0 if it uses the Half-Life DLL</item>
            <item>1 if it uses its own DLL</item>
            </list>
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.PartialInfo">
            <summary>
            A2S_INFO Partial Info
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Protocol">
            <summary>
            Protocol version used by the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Name">
            <summary>
            Name of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Map">
            <summary>
            Map the server has currently loaded.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Folder">
            <summary>
            Name of the folder containing the game files.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Game">
            <summary>
            Full name of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Players">
            <summary>
            Number of players on the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.MaxPlayers">
            <summary>
            Maximum number of players the server reports it can hold.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Bots">
            <summary>
            Number of bots on the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.ServerType">
            <summary>
            Indicates the type of server
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Environment">
            <summary>
            Indicates the operating system of the server
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.Visibility">
            <summary>
            Indicates whether the server requires a password
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.PartialInfo.VAC">
            <summary>
            Specifies whether the server uses VAC
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.Player">
            <summary>
            Player Data
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.Player.Name">
            <summary>
            Player Name
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.Player.Score">
            <summary>
            Player Score
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.Player.Duration">
            <summary>
            Player Duration
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.Player.Deaths">
            <summary>
            Player Deaths
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.Player.Money">
            <summary>
            Player Money
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.ServerType">
            <summary>
            Indicates the type of server
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.ServerType.Dedicated">
            <summary>
            Dedicated server
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.ServerType.Listen">
            <summary>
            Listen server
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.ServerType.Proxy">
            <summary>
            SourceTV relay (proxy)
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.SourceInfo">
            <summary>
            Source Response
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.ID">
            <summary>
            <a href="http://developer.valvesoftware.com/wiki/Steam_Application_ID">Steam Application ID</a> of game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.Mode">
            <summary>
            Indicates the game mode
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.Witnesses">
            <summary>
            The number of witnesses necessary to have a player arrested.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.Duration">
            <summary>
            Time (in seconds) before a player is arrested while being witnessed.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.Version">
            <summary>
            Version of the game installed on the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.EDF">
            <summary>
            If present, this specifies which additional data fields will be included.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.Port">
            <summary>
            The server's game port number.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.SteamID">
            <summary>
            Server's SteamID.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.SpectatorPort">
            <summary>
            Spectator port number for SourceTV.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.SpectatorName">
            <summary>
            Name of the spectator server for SourceTV.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.Keywords">
            <summary>
            Tags that describe the game according to the server (for future use.)
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Source.SourceInfo.GameID">
            <summary>
            The server's 64-bit GameID. If this is present, a more accurate AppID is present in the low 24 bits. The earlier AppID could have been truncated as it was forced into 16-bit storage.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.VAC">
            <summary>
            Specifies whether the server uses VAC
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.VAC.Unsecured">
            <summary>
            Unsecured
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.VAC.Secured">
            <summary>
            Secured
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Source.Visibility">
            <summary>
            Indicates whether the server requires a password
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.Visibility.Public">
            <summary>
            Public
            </summary>
        </member>
        <member name="F:OpenGSQ.Responses.Source.Visibility.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Unreal2.Player">
            <summary>
            Represents a player in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Player.Id">
            <summary>
            Gets or sets the ID of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Player.Name">
            <summary>
            Gets or sets the name of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Player.Ping">
            <summary>
            Gets or sets the ping of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Player.Score">
            <summary>
            Gets or sets the score of the player.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Player.StatsId">
            <summary>
            Gets or sets the stats ID of the player.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Unreal2.Rules">
            <summary>
            Represents the rules of the Unreal2 game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Rules.Mutators">
            <summary>
            Gets or sets the list of mutators.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Rules.Data">
            <summary>
            A private dictionary to hold the data.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Rules.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="T:OpenGSQ.Responses.Unreal2.Status">
            <summary>
            Represents the status of a server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.ServerId">
            <summary>
            Gets or sets the server ID.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.ServerIP">
            <summary>
            Gets or sets the IP address of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.GamePort">
            <summary>
            Gets or sets the game port of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.QueryPort">
            <summary>
            Gets or sets the query port of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.MapName">
            <summary>
            Gets or sets the name of the map.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.GameType">
            <summary>
            Gets or sets the type of the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.NumPlayers">
            <summary>
            Gets or sets the number of players.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.MaxPlayers">
            <summary>
            Gets or sets the maximum number of players.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.Ping">
            <summary>
            Gets or sets the ping.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.Flags">
            <summary>
            Gets or sets the flags.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Unreal2.Status.Skill">
            <summary>
            Gets or sets the skill level.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Vcmp.Player">
            <summary>
            Represents a player in the game.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Vcmp.Player.Name">
            <summary>
            Gets or sets the player's name.
            </summary>
        </member>
        <member name="T:OpenGSQ.Responses.Vcmp.Status">
            <summary>
            Represents the status response from a server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Vcmp.Status.Version">
            <summary>
            Gets or sets the version of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Vcmp.Status.Password">
            <summary>
            Gets or sets a value indicating whether a password is required to connect to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Vcmp.Status.NumPlayers">
            <summary>
            Gets or sets the number of players currently connected to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Vcmp.Status.MaxPlayers">
            <summary>
            Gets or sets the maximum number of players that can connect to the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Vcmp.Status.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Vcmp.Status.GameType">
            <summary>
            Gets or sets the type of game being played on the server.
            </summary>
        </member>
        <member name="P:OpenGSQ.Responses.Vcmp.Status.Language">
            <summary>
            Gets or sets the language of the server.
            </summary>
        </member>
        <member name="T:OpenGSQ.TcpClient">
            <summary>
            A class for handling TCP client communication.
            </summary>
        </member>
        <member name="M:OpenGSQ.TcpClient.CommunicateAsync(OpenGSQ.ProtocolBase,System.Byte[])">
            <summary>
            Sends data to a connected TcpClient and returns the response.
            </summary>
            <param name="protocolBase">The protocol information.</param>
            <param name="data">The data to send.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the response data.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.TcpClientExtensions">
            <summary>
            A class that extends the TcpClient class with a Communicate method.
            </summary>
        </member>
        <member name="M:OpenGSQ.TcpClientExtensions.ConnectAsync(System.Net.Sockets.TcpClient,System.String,System.Int32,System.Int32)">
            <summary>
            Extension method for the TcpClient class to connect to a server with a specified timeout.
            </summary>
            <param name="tcpClient">The TcpClient instance on which the extension method is invoked.</param>
            <param name="host">The host name or IP address of the remote server.</param>
            <param name="port">The port number of the remote server.</param>
            <param name="timeout">The send and receive timeout value for the TcpClient in milliseconds.</param>
            <returns>A Task representing the asynchronous operation.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="M:OpenGSQ.TcpClientExtensions.SendAsync(System.Net.Sockets.TcpClient,System.Byte[])">
            <summary>
            Sends data to a connected TcpClient.
            </summary>
            <param name="tcpClient">The TcpClient to send data to.</param>
            <param name="data">The data to send.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:OpenGSQ.TcpClientExtensions.ReceiveAsync(System.Net.Sockets.TcpClient)">
            <summary>
            Receives data from a connected TcpClient.
            </summary>
            <param name="tcpClient">The TcpClient to receive data from.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the received data.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.UdpClient">
            <summary>
            A class for handling UDP client communication.
            </summary>
        </member>
        <member name="M:OpenGSQ.UdpClient.Connect(System.Net.Sockets.UdpClient,System.String,System.Int32,System.Int32)">
            <summary>
            Extension method for the UdpClient class to connect to a server with a specified timeout.
            </summary>
            <param name="udpClient">The UdpClient instance on which the extension method is invoked.</param>
            <param name="host">The host name or IP address of the remote server.</param>
            <param name="port">The port number of the remote server.</param>
            <param name="timeout">The send and receive timeout value for the UdpClient in milliseconds.</param>
        </member>
        <member name="M:OpenGSQ.UdpClient.CommunicateAsync(OpenGSQ.ProtocolBase,System.Byte[])">
            <summary>
            Sends data to a connected UdpClient and returns the response.
            </summary>
            <param name="protocolBase">The protocol information.</param>
            <param name="data">The data to send.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the response data.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
        <member name="T:OpenGSQ.UdpClientExtensions">
            <summary>
            A class that extends the UdpClient class with a Communicate method.
            </summary>
        </member>
        <member name="M:OpenGSQ.UdpClientExtensions.ReceiveAsyncWithTimeout(System.Net.Sockets.UdpClient)">
            <summary>
            Receives a UDP datagram asynchronously with a timeout.
            </summary>
            <param name="udpClient">The UdpClient to receive from.</param>
            <returns>A byte array containing the received datagram.</returns>
            <exception cref="T:OpenGSQ.Exceptions.TimeoutException">Thrown when the operation times out.</exception>
        </member>
    </members>
</doc>
